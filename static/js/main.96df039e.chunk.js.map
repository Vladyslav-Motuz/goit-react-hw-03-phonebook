{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactList","contacts","onDeleteContact","className","s","contact__list","map","contact","contact__item","contact__text","name","number","contact__button","onClick","id","ContactForm","state","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","resetForm","this","form","form__label","type","pattern","title","onChange","form__input","required","form__button","React","Component","Filter","label","input","App","filter","addcontact","filterName","find","alert","preState","nanoid","deleteContact","nameID","handleChangeFilter","getVisibledContacts","normalizedFilter","toLowerCase","includes","data","localStorage","getItem","parseddata","JSON","parse","prevProps","prevState","setItem","stringify","visibledContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96df039e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3t7Hx\",\"form__label\":\"ContactForm_form__label__I-1tB\",\"form__input\":\"ContactForm_form__input__2gjfO\",\"form__button\":\"ContactForm_form__button__1aVeN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"ContactList_contact__item__1kwMR\",\"contact__text\":\"ContactList_contact__text__38zND\",\"contact__button\":\"ContactList_contact__button__2UpEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1NYTz\",\"input\":\"Filter_input__DUCsG\"};","import React from \"react\";\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ul className={s.contact__list}>\r\n            {contacts.map(contact =>\r\n                <li key={contact.id} className={s.contact__item}>\r\n                    <p className={s.contact__text}>{contact.name}: {contact.number}</p>\r\n                    <button\r\n                        className={s.contact__button}\r\n                        onClick={() => onDeleteContact(contact.id)}>delete</button>\r\n                </li>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ContactList;","import React from \"react\";\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends React.Component {\r\n    state = {\r\n        name: \"\",\r\n        number: \"\"\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n\r\n        this.resetForm();\r\n    };\r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            name: \"\",\r\n            number: \"\"\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form\r\n                onSubmit={this.handleSubmit}\r\n                className={s.form}>\r\n                <label className={s.form__label}>\r\n                    Имя <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        className={s.form__input}\r\n                        required\r\n                    />\r\n                </label>\r\n\r\n                <label className={s.form__label}>\r\n                    Телефон <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                        value={number}\r\n                        onChange={this.handleChange}\r\n                        className={s.form__input}\r\n                        required\r\n                    />\r\n                </label>\r\n\r\n                <button type=\"submit\" className={s.form__button}>Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default ContactForm;","import s from './Filter.module.css';\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <label className={s.label}>\r\n            Find contacts by name\r\n            <input\r\n                type=\"text\"\r\n                className={s.input}\r\n                value={value}\r\n                onChange={onChange} />\r\n        </label>\r\n    )\r\n};\r\n\r\nexport default Filter;","import React from \"react\";\nimport { nanoid } from 'nanoid'\nimport './App.css';\nimport contacts from './contacts.json';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends React.Component {\n  state = {\n    // contacts: contacts,\n    contacts: [],\n    filter: '',\n  };\n  \n  addcontact = (contact) => {\n    const { name } = contact;\n    const filterName = this.state.contacts.find(contact => contact.name === name);\n    filterName ? alert(`${name} is already in contacts!`) :\n      this.setState(preState => ({\n        contacts: [...preState.contacts, { id: nanoid(), ...contact }]\n      }))\n  };\n\n  deleteContact = (nameID) => {\n    this.setState(preState => ({\n      contacts: preState.contacts.filter(name => name.id !== nameID)\n    }))\n  };\n\n  handleChangeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value })\n  };\n\n  getVisibledContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  componentDidMount() {\n    // console.log(localStorage.getItem('contacts') === null); \n    const data = localStorage.getItem('contacts');\n    const parseddata = JSON.parse(data);\n    // console.log(parseddata !== true); \n    if (localStorage.getItem('contacts') === null) {\n      // console.log('not data in localstoredge');\n      this.setState({ contacts: contacts });\n    };\n    \n    if (parseddata !== true) {\n      this.setState({ contacts: parseddata });\n    };\n  };\n  \n  componentDidUpdate(prevProps, prevState) {\n    const {contacts} = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    };\n  };\n\n  render() {\n    const { filter } = this.state; \n    const visibledContacts = this.getVisibledContacts();\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addcontact}/>\n        \n        <h2>Contacts</h2>\n        <Filter\n          value={filter}\n          onChange={this.handleChangeFilter} />\n        <ContactList\n          contacts={visibledContacts}\n          onDeleteContact={this.deleteContact} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}